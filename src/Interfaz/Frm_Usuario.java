/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import Conexion.DataBaseConnection;
import java.sql.Connection;
import javax.swing.JOptionPane;
import Entidades.Usuario;
import java.sql.SQLException;
import java.sql.Statement;
import Conexion.DataBaseConnection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Conexion.DataBaseConnection;
import Conexion.DataAccesUsuario;
import java.util.List;
import javax.swing.DefaultListModel;
/**
 *
 * @author PC
 */
public class Frm_Usuario extends javax.swing.JFrame {
    
    private Connection conexion;
    private Statement st;
    private DefaultListModel modelList = new DefaultListModel();
    private List<Usuario> usuariosList;
    /**
     * Creates new form Frm_Usuario
     */
    public Frm_Usuario() {
        conectarDB();
        initComponents();
        usuariosLista.setModel(modelList);
        listarUsuarios();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usuariosLista = new javax.swing.JList<>();
        btn_registrar = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_dni = new java.awt.TextField();
        jLabel2 = new javax.swing.JLabel();
        txt_id = new java.awt.TextField();
        jLabel3 = new javax.swing.JLabel();
        txt_nombre = new java.awt.TextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        usuariosLista.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        usuariosLista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(usuariosLista);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 146, 420, 190);

        btn_registrar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btn_registrar.setText("Registrar");
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_registrar);
        btn_registrar.setBounds(340, 30, 90, 23);

        btn_buscar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_buscar);
        btn_buscar.setBounds(340, 70, 90, 23);

        btn_eliminar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_eliminar);
        btn_eliminar.setBounds(340, 110, 90, 23);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 12)); // NOI18N
        jLabel1.setText("DNI");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 110, 50, 16);
        getContentPane().add(txt_dni);
        txt_dni.setBounds(80, 110, 150, 20);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        jLabel2.setText("USUARIO");
        jLabel2.setToolTipText("");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(150, 10, 110, 30);

        txt_id.setEditable(false);
        getContentPane().add(txt_id);
        txt_id.setBounds(80, 50, 150, 20);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 12)); // NOI18N
        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 80, 50, 20);
        getContentPane().add(txt_nombre);
        txt_nombre.setBounds(80, 80, 150, 20);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 12)); // NOI18N
        jLabel4.setText("ID");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 50, 40, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Conecta Base de Datos
    private void conectarDB(){
        try {
            conexion = DataBaseConnection.getConnection();
            st = conexion.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Frm_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //BOTONES
    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        Usuario user = new Usuario(txt_nombre.getText(), txt_dni.getText());
        insertarUsuario(user);
        limpiarCampos();
        listarUsuarios();
    }//GEN-LAST:event_btn_registrarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        String dni = txt_dni.getText();
        Usuario user = new Usuario(dni);
        buscarUsuario(user,dni);
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        int index = usuariosLista.getSelectedIndex();
        Usuario userSelected = usuariosList.get(index);
        eliminarUsuario(userSelected);
    }//GEN-LAST:event_btn_eliminarActionPerformed
    
    //METODOS
    private void insertarUsuario(Usuario user){
        try {
            DataAccesUsuario dao = new DataAccesUsuario(st,user);
            dao.insertarUsuario();
        } catch (SQLException ex) {
            Logger.getLogger(Frm_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void eliminarUsuario(Usuario user){
        try {
            DataAccesUsuario dao = new DataAccesUsuario(st,user);
            dao.eliminarUsuario();
            listarUsuarios();
        } catch (SQLException ex) {
            Logger.getLogger(Frm_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
    private void buscarUsuario(Usuario user, String dni){
        DataAccesUsuario dao = new DataAccesUsuario(st, user);
        try {
            Usuario usuarioEncontrado = dao.buscarUsuarioPorDni();
            if (usuarioEncontrado != null) {
                txt_id.setText(String.valueOf(usuarioEncontrado.getIdUsuario()));
                txt_nombre.setText(usuarioEncontrado.getNombre());
                txt_dni.setText(usuarioEncontrado.getDni());
                JOptionPane.showMessageDialog(this, "Usuario encontrado: " + usuarioEncontrado.getUsuarioText());
            } else {
                JOptionPane.showMessageDialog(this, "Usuario no encontrado.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Frm_Usuario.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al buscar el usuario: " + ex.getMessage());
        }
    } 
    private void listarUsuarios(){
        try {
            DataAccesUsuario dao = new DataAccesUsuario(st);
            usuariosList = dao.getListaUsuarios();
            
            modelList.clear();
            for (Usuario user : usuariosList) {
                modelList.addElement(user.getUsuarioText());
            }
        } catch (Exception e) {
            
        }
    }
    private void limpiarCampos() {
        txt_id.setText("");
        txt_dni.setText("");
        txt_nombre.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.TextField txt_dni;
    private java.awt.TextField txt_id;
    private java.awt.TextField txt_nombre;
    private javax.swing.JList<String> usuariosLista;
    // End of variables declaration//GEN-END:variables
}
